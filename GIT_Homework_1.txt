GIT Homework 1
JSON
 1. Создать внешний репозиторий c названием JSON.
В GitHUB команда « Create a new repository», переходим во вкладку Repositories и жмем New
 2. Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:Korsakilya1805/JSON.git
 3. Внутри локального JSON создать файл “new.json”.
cat  >> new.json
 4. Добавить файл под гит.
git status
git add new.json
 5. Закоммитить файл.
git commit -am "new.json"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
8. Отправить изменения на внешний репозиторий.
Git status
Git add new.json  
git commit -am "new.json"
git push
 9. Создать файл preferences.json
cat  >> preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim sklls.json 
12. Отправить сразу 2 файла на внешний репозиторий.
Git status
Git add sklls.json  preferences.json
git commit -am "sklls.json, preferences.json"
git push
13. На веб интерфейсе создать файл bug_report.json.
Открываем вкладку add file, жмем на пункт create new file
Вводим bug_report.json.
14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Жмем на кнопку Commit new file 

15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Жмем на кнопку Edit this file
16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаем  кнопку Edit this file
17. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull

___________________________________________________
XML
 1. Создать внешний репозиторий c названием XML.
В GitHUB команда « Create a new repository», переходим во вкладку Repositories и жмем New
 2. Клонировать репозиторий XML на локальный компьютер.
git clone git@github.com:Korsakilya1805/XML.git
 3. Внутри локального XML создать файл “new.xml”.
cat >> new.xml
 4. Добавить файл под гит.
git status
 git add new.xml
5. Закоммитить файл.
git commit -am "new.xml"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
Vim new.xml
28. Отправить изменения на внешний репозиторий.
git status
git add new.xml
git commit -am "new.xml"
git push
 8. Создать файл preferences.xml
 9. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim new.xml
10. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе
cat > skills.xml
11. Сделать коммит в одну строку.
git add  skils.xml  preferences.xml
git commit -am"add skils.xml , preferences.xml"
 12. Отправить сразу 2 файла на внешний репозиторий.
 git push
 13. На веб интерфейсе создать файл bug_report.xml. 
Открываем вкладку add file, жмем на пункт create new file
Вводим bug_report.xml. 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Жмем кнопку Commit new file 
 15. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Жмем на кнопку Edit this file
16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Жмем на кнопку Commit new file
17. Синхронизировать внешний и локальный репозиторий XML
git fetch
git pull

__________________________________________________________________________
TXT
1.	Создать внешний репозиторий c названием TXT.
В GitHUB команда « Create a new repository», переходим во вкладку Repositories и жмем New
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:Korsakilya1805/TXT-.git
 3. Внутри локального TXT создать файл “new.txt”.
cat >> new.txt
 4. Добавить файл под гит.
Git status
Git add new.txt
 5. Закоммитить файл.
git commit -am" new.txt"
6. Отправить файл на внешний GitHub репозиторий. 
git push
7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
Vim new.txt
8. Отправить изменения на внешний репозиторий.
git push
 9. Создать файл preferences.txt
Cat >> preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
vim sklls.txt
 12. Сделать коммит в одну строку.
git add  skils.txt  preferences.txt
git commit -am"add skils.txt, preferences.txt"
 13. Отправить сразу 2 файла на внешний репозиторий.
Git push
 14. На веб интерфейсе создать файл bug_report.txt.
Открываем вкладку add file, жмем create new file
Вводим bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Жмем Commit new file 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Нажимаем кнопку Edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Жмем Commit new file
 18. Синхронизировать внешний и локальный репозиторий TXT
git fetch
git pull

